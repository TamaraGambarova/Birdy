syntax = "proto3";
package birdy_grpc;

service MainEndpoint {
	rpc RegisterUser (RegistrationRequest) returns (RegistrationResponse) {}
	rpc LoginUser(LoginRequest) returns (LoginResponse) {}
	rpc FindBird(FindBirdRequest) returns (stream FindBirdResponse) {}
	rpc SendMessage(SendMessageRequest) returns (SendMessageResponse) {}
	rpc SubscribeToNewMessages(Empty) returns (stream ChatMessage) {}
}

message RegistrationRequest {
	string first_name = 1;
	string middle_name = 2;
	string last_name = 3;
	string birth_date = 4;
	string city = 5;
	string email = 6;
	string password = 7;
}
message RegistrationResponse {
	enum Result{
		OK = 0;
		EMAIL_ALREADY_TAKEN = 1;
		DB_ERROR = 2;
	}
	Result result = 1;
}

message LoginRequest {
	string email = 1;
	string password = 2;
}
message LoginResponse {
	enum Result {
		OK = 0;
		WRONG_PASSWORD = 1;
		LOGIN_NOT_FOUND = 2;
		DB_ERROR = 3;
	}
	Result result = 1;
}

message Empty {}

message Timestamp {
	// Represents seconds of UTC time since Unix epoch
	// 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
	// 9999-12-31T23:59:59Z inclusive.
	int64 seconds = 1;

	// Non-negative fractions of a second at nanosecond resolution. Negative
	// second values with fractions must still have non-negative nanos values
	// that count forward in time. Must be from 0 to 999,999,999
	// inclusive.
	int32 nanos = 2;
}

message UserBirdInfo {
	message Point {
		double longitude = 1;
		double latitude = 2;
	}
	Point found_point = 1;
	Timestamp found_time = 2;
	string finder_email = 3;
	EncyclopedicBirdInfo info = 4;
	bytes sound = 5;
}

message EncyclopedicBirdInfo {
	bytes photo = 1;
	string name = 2;
	string description = 3;
}

message FindBirdRequest {
	enum FindType{
		BY_PHOTO = 0;
		BY_SOUND = 1;
		BY_NAME = 2;
	}
	FindType type = 1;
	oneof data {
		bytes media = 2;
		string name = 3;
	}
}
message FindBirdResponse {
	enum Result {
		FOUND = 0;
		NOT_FOUND = 1;
		DB_ERROR = 2;
	}
	Result res = 1;
	oneof data {
		EncyclopedicBirdInfo enc_info = 2;
		UserBirdInfo user_info = 3;
	}
}

message SendMessageRequest {
	string text_content = 1;
}
message SendMessageResponse {
	Timestamp server_time = 1;
}

message ChatMessage {
	string sender_email = 1;
	Timestamp message_time = 2;
	string text = 3;
}
